/*
order service

order service

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package doc

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateOrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrderRequest{}

// CreateOrderRequest struct for CreateOrderRequest
type CreateOrderRequest struct {
	CustomerID string `json:"customerID"`
	Items []ItemWithQuantity `json:"items"`
}

type _CreateOrderRequest CreateOrderRequest

// NewCreateOrderRequest instantiates a new CreateOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrderRequest(customerID string, items []ItemWithQuantity) *CreateOrderRequest {
	this := CreateOrderRequest{}
	this.CustomerID = customerID
	this.Items = items
	return &this
}

// NewCreateOrderRequestWithDefaults instantiates a new CreateOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrderRequestWithDefaults() *CreateOrderRequest {
	this := CreateOrderRequest{}
	return &this
}

// GetCustomerID returns the CustomerID field value
func (o *CreateOrderRequest) GetCustomerID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerID
}

// GetCustomerIDOk returns a tuple with the CustomerID field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetCustomerIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerID, true
}

// SetCustomerID sets field value
func (o *CreateOrderRequest) SetCustomerID(v string) {
	o.CustomerID = v
}

// GetItems returns the Items field value
func (o *CreateOrderRequest) GetItems() []ItemWithQuantity {
	if o == nil {
		var ret []ItemWithQuantity
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetItemsOk() ([]ItemWithQuantity, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *CreateOrderRequest) SetItems(v []ItemWithQuantity) {
	o.Items = v
}

func (o CreateOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customerID"] = o.CustomerID
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

func (o *CreateOrderRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customerID",
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrderRequest := _CreateOrderRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrderRequest)

	if err != nil {
		return err
	}

	*o = CreateOrderRequest(varCreateOrderRequest)

	return err
}

type NullableCreateOrderRequest struct {
	value *CreateOrderRequest
	isSet bool
}

func (v NullableCreateOrderRequest) Get() *CreateOrderRequest {
	return v.value
}

func (v *NullableCreateOrderRequest) Set(val *CreateOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrderRequest(val *CreateOrderRequest) *NullableCreateOrderRequest {
	return &NullableCreateOrderRequest{value: val, isSet: true}
}

func (v NullableCreateOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


